@{
    ViewData["Title"] = "Análisis de Imagen con IA";
}

<div class="container py-4">
    <h2 class="mb-4 text-primary">Análisis de Imagen con Google AI Studio</h2>

    <p class="mb-4">Selecciona una imagen para analizarla con el modelo de visión de Google AI.</p>

    <div class="row">
        <div class="col-md-6 mb-3 text-center">
            <img src="#" alt="Imagen a analizar" id="imagePreview" class="img-fluid rounded shadow-sm border" style="max-height: 350px; object-fit: contain;">
        </div>

        <div class="col-md-6">
            <form id="imageForm" enctype="multipart/form-data">
                <div class="mb-3">
                    <input type="file" class="form-control" id="imageUpload" name="image" accept="image/*">
                </div>

                <button type="button" class="btn btn-primary w-100 mb-3" id="btnIntegration">Analizar Imagen</button>
            </form>

            <div id="loadingIndicator" class="text-center" style="display:none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Cargando...</span>
                </div>
                <p class="mt-2">Analizando imagen con IA...</p>
            </div>

            <div id="resultIntegration" class="card mt-3" style="display:none;">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Resultados del análisis</h5>
                </div>
                <div class="card-body" id="resultContent">
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById("imageUpload").addEventListener("change", function (e) {
        var reader = new FileReader();
        reader.onload = function (e) {
            document.getElementById("imagePreview").src = e.target.result;
        }
        reader.readAsDataURL(this.files[0]);
    });

    document.getElementById("btnIntegration").addEventListener("click", function() {
        const fileInput = document.getElementById("imageUpload");

        if (!fileInput.files || fileInput.files.length === 0) {
            alert("Por favor, selecciona una imagen primero.");
            return;
        }

        const formData = new FormData();
        formData.append("image", fileInput.files[0]);

        // Mostrar indicador de carga
        document.getElementById("loadingIndicator").style.display = "block";
        document.getElementById("resultIntegration").style.display = "none";

        fetch("/Integration/AnalyzeImage", {
            method: "POST",
            body: formData
        })
        .then(response => {
            if (!response.ok) {
                return response.text().then(text => {
                    throw new Error(text);
                });
            }
            return response.json();
        })
        .then(data => {
            // Ocultar indicador de carga
            document.getElementById("loadingIndicator").style.display = "none";

            // Mostrar resultados
            const resultElement = document.getElementById("resultIntegration");
            resultElement.style.display = "block";

            // Formatear el texto con saltos de línea HTML
            const formattedText = data.result
                .replace(/\n/g, '<br>')
                .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>'); // Convertir **texto** a <strong>texto</strong>

            document.getElementById("resultContent").innerHTML = formattedText;
        })
        .catch(error => {
            // Ocultar indicador de carga
            document.getElementById("loadingIndicator").style.display = "none";

            // Mostrar error
            const resultElement = document.getElementById("resultIntegration");
            resultElement.style.display = "block";
            document.getElementById("resultContent").innerHTML =
                `<div class="alert alert-danger">Error: ${error.message}</div>`;
        });
    });
</script>